<?php

namespace App\Http\Resources\Api\Abstracts;

use Illuminate\Http\Resources\Json\JsonResource;

class AbstractJsonResource extends JsonResource
{
    protected array $except;

    /**
     * @param       $resource
     */
    public function __construct($resource)
    {
        $this->except();
        parent::__construct($resource);
        static::applyAdditionals($this);
    }

    public function except(array $except = [])
    {
        $this->except = $except;
        return $this;
    }

    public static function applyAdditionals(JsonResource $resource, $success = true)
    {
        $success = value($success);
        if( isset($resource->additional[ 'success' ]) ) {
            return $resource;
        }

        return $resource->additional(compact('success'));
    }

    public static function collection($resource)
    {
        $resource = isBuilder($resource) ? $resource->get() : $resource;

        return static::applyAdditionals(parent::collection($resource)); // TODO: Change the autogenerated stub
    }

    /**
     * Transform the resource into an array.
     *
     * @param \Illuminate\Http\Request $request
     *
     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable
     */
    public function toArray($request)
    {
        /** @var \App\Models\Info\EntryCategory $model */
        $model = $this->resource;
        $only = [
            'id',
            'name',
            'status',
        ];

        return $model->only(
            array_values(array_except(array_combine($only, $only), $this->except))
        );
    }
}
