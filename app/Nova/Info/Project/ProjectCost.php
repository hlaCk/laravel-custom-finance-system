<?php

namespace App\Nova\Info\Project;

use App\Nova\Abstracts\Resource as BaseResource;
use App\Nova\Fields\Name;
use Illuminate\Http\Request;
use Laravel\Nova\Fields\BelongsTo;
use Laravel\Nova\Fields\Currency;
use Laravel\Nova\Fields\ID;
use Laravel\Nova\Http\Requests\NovaRequest;

class ProjectCost extends BaseResource
{
    /**
     * To make the resource ($globallySearchable = false, $tableStyle = tight)
     *
     * @var bool
     */
    public static bool $partialResource = true;

    /**
     * Indicates if the resource should be displayed in the sidebar.
     *
     * @var bool
     */
    public static $displayInNavigation = false;

    /**
     * The model the resource corresponds to.
     *
     * @var string|\App\Models\Info\Project\ProjectCost
     */
    public static $model = \App\Models\Info\Project\ProjectCost::class;

    /**
     * The single value that should be used to represent the resource when being displayed.
     *
     * @var string
     */
    public static $title = 'name';

    /**
     * The logical group associated with the resource.
     *
     * @var string
     */
    public static $group = 'Project';

    /**
     * The columns that should be searched.
     *
     * @var array
     */
    public static $search = [
        'id',
        'name',
    ];

    /**
     * Get the fields displayed by the resource.
     *
     * @param \Illuminate\Http\Request $request
     *
     * @return array
     */
    public function fields(Request $request)
    {
        return [
            ID::make(),

            Name::make()
                ->nullableRule(),

            Currency::make(__('models/info/project/project_cost.fields.cost'), 'cost')
                    ->default(0)
                    ->requiredRule(),

            BelongsTo::make(
                __('models/info/project/project_cost.fields.project'),
                'project',
                Project::class
            )
                     ->requiredRule(),
        ];
    }

    public static function redirectAfterCreate(NovaRequest $request, $resource)
    {
//        logger([
//                   $request->all(),
//                   $request->viaResource(),
//                   $request->viaRelationship(),
//                   $resource
//               ]);
        return '/resources/' . Project::uriKey() . '/' . $resource->project_id;
    }

    public static function redirectAfterDelete(NovaRequest $request)
    {
        return parent::redirectAfterDelete($request); // TODO: Change the autogenerated stub
    }

    public static function redirectAfterUpdate(NovaRequest $request, $resource)
    {
//        logger([
//                   $request->all(),
//                   $request->viaResource(),
//                   $request->viaRelationship(),
//                   $resource
//               ]);
        return '/resources/' . Project::uriKey() . '/' . $resource->project_id;
    }
}
